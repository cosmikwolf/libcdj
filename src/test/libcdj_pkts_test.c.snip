#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <net/if.h>
#include <ifaddrs.h>
#include <netpacket/packet.h>
#include <arpa/inet.h>
#include <netinet/in.h>

#include "../c/cdj.h"

#include "dump.h"
#include "snip_core.h"

int main(int argc, const char* argv[])
{
    uint16_t len;
    ssize_t d_len;
    uint8_t* packet;
    
    int n = 99;
    char master = 0;
    int8_t new_master = -1;
    unsigned char model = 'X';
    float bpm = 120.00;
    uint8_t bar_pos = 3;
    uint8_t active = 1;
    uint32_t sync_counter = 99;
    uint8_t member_count = 3;
    uint8_t mac[6] = { 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, };
    uint8_t player_id = 5;

    const char* test_ip = "192.168.1.33";
    uint8_t ip[4];
    cdj_ip_format(test_ip, ip);

    packet = cdj_create_keepalive_packet(&len, model, ip, mac, player_id, member_count);
    //cdj_print_packet(packet, len, 50000);
    uint8_t* dump = dump_load("./cdj-keep-alive.dump", NULL, &d_len);
    dump_eq("keep-alive", dump, d_len, packet, len);


    packet = cdj_create_initial_discovery_packet(&len, model);
    if ( ! dump_cmp("cdj-discovery.dump", packet, len) ) {
        cdj_print_packet(packet, len, 50001);
    }

    packet = cdj_create_stage1_discovery_packet(&len, model, mac, 1);
    if ( ! dump_cmp("cdj-stage1-discovery.dump", packet, len) ) {
        cdj_print_packet(packet, len, 50001);
    }

    packet = cdj_create_id_use_req_packet(&len, model, ip, mac, player_id, 1);
    if ( ! dump_cmp("cdj-id-use-req.dump", packet, len) ) {
        cdj_print_packet(packet, len, 50001);
    }

    packet = cdj_create_id_set_req_packet(&len, model, player_id, 1);
    if ( ! dump_cmp("cdj-id-set-req.dump", packet, len) ) {
        cdj_print_packet(packet, len, 50001);
    }

    packet = cdj_create_beat_packet(&len, model, player_id, bpm, bar_pos);
    if ( ! dump_cmp("cdj-beat.dump", packet, len) ) {
        cdj_print_packet(packet, len, 50001);
    }

    packet = cdj_create_status_packet(&len, model, player_id, bpm, bar_pos, 
        active, master, new_master, sync_counter, n);
    if ( ! dump_cmp("cdj-status.dump", packet, len) ) {
        cdj_print_packet(packet, len, 50001);
    }

    packet = cdj_create_id_collision_packet(&len, model, player_id, ip);
    if ( ! dump_cmp("cdj-collision.dump", packet, len) ) {
        cdj_print_packet(packet, len, 50001);
    }


    exit(0);
}
