/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MOUNT_H_RPCGEN
#define _MOUNT_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MNTPATHLEN 1024
#define MNTNAMLEN 255
#define FHSIZE 32

typedef char FHandle[FHSIZE];

struct FHStatus {
	u_int status;
	union {
		FHandle directory;
	} FHStatus_u;
};
typedef struct FHStatus FHStatus;

typedef struct {
	u_int DirPath_len;
	char *DirPath_val;
} DirPath;

typedef char *Name;

struct MountList {
	Name hostName;
	DirPath directory;
	struct MountList *next;
};
typedef struct MountList MountList;

struct MountListRes {
	MountList *next;
};
typedef struct MountListRes MountListRes;

struct Groups {
	Name name;
	struct Groups *next;
};
typedef struct Groups Groups;

struct ExportList {
	DirPath fileSystem;
	Groups *groups;
	struct ExportList *next;
};
typedef struct ExportList ExportList;

struct ExportListRes {
	ExportList *next;
};
typedef struct ExportListRes ExportListRes;

#define MOUNTPROG 100005
#define MOUNTVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define MOUNTPROC_NULL 0
extern  void * mountproc_null_1(void *, CLIENT *);
extern  void * mountproc_null_1_svc(void *, struct svc_req *);
#define MOUNTPROC_MNT 1
extern  FHStatus * mountproc_mnt_1(DirPath *, CLIENT *);
extern  FHStatus * mountproc_mnt_1_svc(DirPath *, struct svc_req *);
#define MOUNTPROC_DUMP 2
extern  MountListRes * mountproc_dump_1(void *, CLIENT *);
extern  MountListRes * mountproc_dump_1_svc(void *, struct svc_req *);
#define MOUNTPROC_UMNT 3
extern  void * mountproc_umnt_1(DirPath *, CLIENT *);
extern  void * mountproc_umnt_1_svc(DirPath *, struct svc_req *);
#define MOUNTPROC_UMNTALL 4
extern  void * mountproc_umntall_1(void *, CLIENT *);
extern  void * mountproc_umntall_1_svc(void *, struct svc_req *);
#define MOUNTPROC_EXPORT 5
extern  ExportListRes * mountproc_export_1(void *, CLIENT *);
extern  ExportListRes * mountproc_export_1_svc(void *, struct svc_req *);
extern int mountprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define MOUNTPROC_NULL 0
extern  void * mountproc_null_1();
extern  void * mountproc_null_1_svc();
#define MOUNTPROC_MNT 1
extern  FHStatus * mountproc_mnt_1();
extern  FHStatus * mountproc_mnt_1_svc();
#define MOUNTPROC_DUMP 2
extern  MountListRes * mountproc_dump_1();
extern  MountListRes * mountproc_dump_1_svc();
#define MOUNTPROC_UMNT 3
extern  void * mountproc_umnt_1();
extern  void * mountproc_umnt_1_svc();
#define MOUNTPROC_UMNTALL 4
extern  void * mountproc_umntall_1();
extern  void * mountproc_umntall_1_svc();
#define MOUNTPROC_EXPORT 5
extern  ExportListRes * mountproc_export_1();
extern  ExportListRes * mountproc_export_1_svc();
extern int mountprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_FHandle (XDR *, FHandle);
extern  bool_t xdr_FHStatus (XDR *, FHStatus*);
extern  bool_t xdr_DirPath (XDR *, DirPath*);
extern  bool_t xdr_Name (XDR *, Name*);
extern  bool_t xdr_MountList (XDR *, MountList*);
extern  bool_t xdr_MountListRes (XDR *, MountListRes*);
extern  bool_t xdr_Groups (XDR *, Groups*);
extern  bool_t xdr_ExportList (XDR *, ExportList*);
extern  bool_t xdr_ExportListRes (XDR *, ExportListRes*);

#else /* K&R C */
extern bool_t xdr_FHandle ();
extern bool_t xdr_FHStatus ();
extern bool_t xdr_DirPath ();
extern bool_t xdr_Name ();
extern bool_t xdr_MountList ();
extern bool_t xdr_MountListRes ();
extern bool_t xdr_Groups ();
extern bool_t xdr_ExportList ();
extern bool_t xdr_ExportListRes ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MOUNT_H_RPCGEN */
